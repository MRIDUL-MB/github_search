{"version":3,"sources":["context.js","components/result.js","components/search.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","url","AppProvider","children","useState","loading","setLoading","showSearch","setShowSearch","searchTerm","setSearchTerm","users","setUsers","console","log","fetchUsers","useCallback","a","fetch","response","json","data","items","error","Provider","value","useGlobalContext","useContext","Result","className","length","map","item","id","login","avatar_url","html_url","src","alt","rel","href","target","Search","refContainer","useRef","onSubmit","e","preventDefault","type","autoComplete","placeholder","ref","onChange","current","required","Home","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAEMA,EAAaC,IAAMC,gBACnBC,EAAM,yCAEZ,SAASC,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SAAY,EACHC,oBAAS,GADN,mBAC1BC,EAD0B,KACjBC,EADiB,OAEGF,oBAAS,GAFZ,mBAE1BG,EAF0B,KAEdC,EAFc,OAGGJ,mBAAS,KAHZ,mBAG1BK,EAH0B,KAGdC,EAHc,OAIPN,mBAAS,IAJF,mBAI1BO,EAJ0B,KAInBC,EAJmB,KAKjCC,QAAQC,IAAIL,GACZ,IAAMM,EAAaC,sBAAW,sBAAC,gCAAAC,EAAA,6DAC7BX,GAAW,GADkB,kBAGJY,MAAM,GAAD,OAAIjB,GAAJ,OAAUQ,IAHX,cAGrBU,EAHqB,gBAIRA,EAASC,OAJD,OAIrBC,EAJqB,OAKnBC,EAAUD,EAAVC,MACRV,EAASU,GACThB,GAAW,GACXO,QAAQC,IAAR,UAAeb,GAAf,OAAqBQ,IARM,kDAU3BI,QAAQU,MAAR,MAV2B,0DAY5B,CAACd,IAEJ,OACE,cAACX,EAAW0B,SAAZ,CACEC,MAAO,CACLpB,UACAE,aACAC,gBACAG,QACAD,gBACAK,cAPJ,SAUGZ,IAKA,IAAMuB,EAAmB,WAC9B,OAAOC,qBAAW7B,I,MCTL8B,MA/Bf,WAAmB,IAAD,EACWF,IAAnBf,EADQ,EACRA,MAER,OAHgB,EACDN,QAGN,qBAAKwB,UAAU,WAEpBlB,EAAMmB,OAAS,EACV,qBAAKD,UAAU,QAAf,oCAGP,yBAASA,UAAU,SAAnB,SAEE,qBAAKA,UAAU,iBAAf,SACGlB,EAAMoB,KAAI,SAACC,GAAU,IACZC,EAAoCD,EAApCC,GAAIC,EAAgCF,EAAhCE,MAAOC,EAAyBH,EAAzBG,WAAYC,EAAaJ,EAAbI,SAC/B,OACE,0BAAkBP,UAAU,QAA5B,UACE,qBAAKQ,IAAKF,EAAYG,IAAKJ,IAC3B,qBAAKL,UAAU,QAAf,SACE,mBAAGU,IAAI,aAAaC,KAAMJ,EAAUK,OAAO,SAA3C,SACGP,QAJOD,WCoCXS,MApDf,WAAmB,IAAD,EAMZhB,IAJFhB,EAFc,EAEdA,cACAK,EAHc,EAGdA,WACAR,EAJc,EAIdA,WACAC,EALc,EAKdA,cAEImC,EAAeC,iBAAO,IAM5B,OACE,0BAASf,UAAU,SAAnB,UACE,sBAAKA,UAAU,OAAf,UACE,wCACA,sCACA,0BASF,uBAAMI,GAAG,cAAcJ,UAAU,OAAOgB,SAlBvB,SAACC,GACpBA,EAAEC,iBACFhC,KAgBE,UACE,uBACEiC,KAAK,SACLf,GAAG,eACHgB,aAAa,MACbC,YAAY,WACZC,IAAKR,EACLS,SAAU,WACR1C,EAAciC,EAAaU,QAAQ5B,OAC/BkB,EAAaU,QAAQ5B,MACvBjB,GAAc,GAEdA,GAAc,IAGlB8C,UAAQ,IAEV,iCACE,mBAAGzB,UAAWtB,EAAa,gBAAkB,kBC7BxCgD,MAbf,WAEE,OADoB7B,IAAZrB,QAEC,qBAAKwB,UAAU,WAGtB,uBAAMA,UAAU,OAAhB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCHS2B,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClE,EAAD,UACE,cAAC,EAAD,QAGJmE,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b8a8f374.chunk.js","sourcesContent":["import React, { useContext, useState, useCallback } from 'react';\r\n\r\nconst AppContext = React.createContext();\r\nconst url = 'https://api.github.com/search/users?q=';\r\n\r\nfunction AppProvider({ children }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [showSearch, setShowSearch] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(':');\r\n  const [users, setUsers] = useState([]);\r\n  console.log(searchTerm);\r\n  const fetchUsers = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${url}${searchTerm}`);\r\n      const data = await response.json();\r\n      const { items } = data;\r\n      setUsers(items);\r\n      setLoading(false);\r\n      console.log(`${url}${searchTerm}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [searchTerm]);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        loading,\r\n        showSearch,\r\n        setShowSearch,\r\n        users,\r\n        setSearchTerm,\r\n        fetchUsers,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\nexport { AppProvider, AppContext };\r\n","import React from 'react';\r\nimport { useGlobalContext } from './../context';\r\nfunction Result() {\r\n  const { users, loading } = useGlobalContext();\r\n\r\n  if (loading) {\r\n    return <div className='loader'></div>;\r\n  }\r\n  if (users.length < 1) {\r\n    return <div className='error'>sorry, no result found</div>;\r\n  }\r\n  return (\r\n    <section className='result'>\r\n      {/* <div className='stats'>{users.length} users are found</div> */}\r\n      <div className='users-template'>\r\n        {users.map((item) => {\r\n          const { id, login, avatar_url, html_url } = item;\r\n          return (\r\n            <article key={id} className='users'>\r\n              <img src={avatar_url} alt={login} />\r\n              <div className='title'>\r\n                <a rel='noreferrer' href={html_url} target='_blank'>\r\n                  {login}\r\n                </a>\r\n              </div>\r\n            </article>\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","import React, { useRef } from 'react';\r\nimport { useGlobalContext } from './../context';\r\nfunction Search() {\r\n  const {\r\n    setSearchTerm,\r\n    fetchUsers,\r\n    showSearch,\r\n    setShowSearch,\r\n  } = useGlobalContext();\r\n  const refContainer = useRef('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetchUsers();\r\n  };\r\n  return (\r\n    <section className='search'>\r\n      <div className='logo'>\r\n        <h3>Github</h3>\r\n        <i>users</i>\r\n        <br />\r\n        {/* <span className='blue'>S</span>\r\n        <span className='red'>E</span>\r\n        <span className='yellow'>A</span>\r\n        <span className='blue'>R</span>\r\n        <span className='green'>C</span>\r\n        <span className='red'>H</span>\r\n        <span className='yellow exclaim'>!</span> */}\r\n      </div>\r\n      <form id='search-form' className='form' onSubmit={handleSubmit}>\r\n        <input\r\n          type='search'\r\n          id='search-input'\r\n          autoComplete='off'\r\n          placeholder='Eg. john'\r\n          ref={refContainer}\r\n          onChange={() => {\r\n            setSearchTerm(refContainer.current.value);\r\n            if (refContainer.current.value) {\r\n              setShowSearch(true);\r\n            } else {\r\n              setShowSearch(false);\r\n            }\r\n          }}\r\n          required\r\n        />\r\n        <button>\r\n          <i className={showSearch ? 'fas fa-search' : 'none'}></i>\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport Result from '../components/result';\r\nimport Search from '../components/search';\r\nimport { useGlobalContext } from './../context';\r\n\r\nfunction Home() {\r\n  const { loading } = useGlobalContext();\r\n  if (loading) {\r\n    return <div className='loader'></div>;\r\n  }\r\n  return (\r\n    <main className='home'>\r\n      <Search />\r\n      <Result />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import Home from './pages/home';\n\nfunction App() {\n  return (\n    <>\n      <Home />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AppProvider } from './context';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}